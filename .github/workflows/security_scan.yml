name: Secure Code Scan

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  sast_scans:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        working-directory: Security_Compliance_workshop-aman/day3

      - name: Run Bandit (Python SAST)
        id: bandit
        run: |
          pip install bandit
          bandit -r . -f html -o bandit-report.html || true
        working-directory: Security_Compliance_workshop-aman/day3
        shell: bash
        continue-on-error: true

      - name: Upload Bandit Report
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: Security_Compliance_workshop-aman/day3/bandit-report.html

      - name: Run Semgrep (General SAST)
        id: semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: p/python p/flask p/secrets p/ci
          workingDirectory: Security_Compliance_workshop-aman/day3
        continue-on-error: true

      - name: Upload Semgrep SARIF Report
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-sarif-report
          path: Security_Compliance_workshop-aman/day3/semgrep.sarif

  secrets_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Gitleaks Scan
        uses: zricethezav/gitleaks-action@v1.4.0
        with:
          config: .github/gitleaks.toml
          report_format: json
          report_path: gitleaks-report.json
        continue-on-error: true

      - name: Upload Gitleaks Report
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report
          path: gitleaks-report.json

  dast_scan:
    runs-on: ubuntu-latest
    needs: sast_scans
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        working-directory: Security_Compliance_workshop-aman/day3

      - name: Start Flask App
        run: |
          nohup python app.py > app.log 2>&1 &
          echo "Waiting for app to start..."
          sleep 15
          curl http://localhost:5000
        working-directory: Security_Compliance_workshop-aman/day3
        shell: bash

      - name: Show logs on failure
        if: failure()
        run: |
          echo "--- App failed to start. Displaying logs from app.log: ---"
          cat app.log
        working-directory: Security_Compliance_workshop-aman/day3

      - name: Run OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: http://localhost:5000
        continue-on-error: true

      - name: Generate ZAP HTML Report (Manual step if action doesn't create it)
        run: echo "ZAP scan completed. Check workflow logs for findings."