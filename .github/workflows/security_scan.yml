name: Secure Code Scan

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  sast_scans:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        working-directory: day3 # <--- ADD THIS

      - name: Run Bandit (Python SAST)
        id: bandit
        run: |
          pip install bandit
          bandit -r . -f html -o bandit-report.html || true
        working-directory: day3 # <--- ADD THIS
        shell: bash
        continue-on-error: true

      - name: Upload Bandit Report
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: day3/bandit-report.html # <--- UPDATE PATH

      - name: Run Semgrep (General SAST)
        id: semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: p/python p/flask p/secrets p/ci
          workingDirectory: day3 # <--- Check Semgrep action docs for specific parameter if 'working-directory' doesn't work. It's often 'working-directory' or 'src'
        continue-on-error: true

      - name: Upload Semgrep SARIF Report
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-sarif-report
          path: day3/semgrep.sarif # <--- UPDATE PATH

  secrets_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Gitleaks Scan
        uses: zricethezav/gitleaks-action@v1.4.0
        with:
          config: .github/gitleaks.toml
          report_format: json
          report_path: gitleaks-report.json
          # You might need to specify a path to scan if it's not the root
          # This action often scans the repo root by default.
          # If it needs a specific directory, it usually has a parameter like 'path' or 'source'
        continue-on-error: true

      - name: Upload Gitleaks Report
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report
          path: gitleaks-report.json
          # If gitleaks saves report in day3, update this path: path: day3/gitleaks-report.json


  dast_scan:
    runs-on: ubuntu-latest
    needs: sast_scans
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        working-directory: day3 # <--- ADD THIS

      - name: Start Flask App
        run: |
          nohup python app.py > app.log 2>&1 &
          echo "Waiting for app to start..."
          sleep 10
          curl http://localhost:5000
        working-directory: day3 # <--- ADD THIS
        shell: bash

      - name: Run OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: http://localhost:5000
        # If the ZAP action needs to find app.py or other files, you might need
        # to ensure it's running from the correct directory or specify paths.
        # This action primarily hits the running web server, so the path is less critical here.

      - name: Generate ZAP HTML Report (Manual step if action doesn't create it)
        run: echo "ZAP scan completed. Check workflow logs for findings."
        # If ZAP report is in day3, update path:
        # - name: Upload ZAP Report
        #   uses: actions/upload-artifact@v4
        #   with:
        #     name: zap-report
        #     path: day3/zap-report.html